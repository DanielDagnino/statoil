#******************************************************************************#
import numpy as np   #@UnusedImport

#******************************************************************************#
def add_1(X):
	for d in range(X.shape[1]):
		X[:,d,:,:] = 1+X[:,d,:,:]
	return X

#******************************************************************************#
def add_1_b(X):
	for d in range(X.shape[1]):
		X[:,d,:,:] = 1+X[:,d,:,:]
	cache = ( X, 1 )
	return X, cache

#******************************************************************************#
X = np.random.randn(20,10,5,5)
a = X.copy()

#--------------------------------------------------------------------------#
k = 0
print(str(np.sum(X[:,k,:,:])))

# #--------------------------------------------------------------------------#
# for d in range(X.shape[1]):
# 	X[:,d,:,:] = 1+X[:,d,:,:]

# #--------------------------------------------------------------------------#
# tup = ( X, a )
# X = add_1(X)
# X, _ = tup

#--------------------------------------------------------------------------#
tup = ( X, a )
X, cache = add_1_b(X)
X, _ = tup

print(a.base is X)

XX, _ = cache
for d in range(XX.shape[1]):
	XX[:,d,:,:] = -1+XX[:,d,:,:]

#--------------------------------------------------------------------------#
k = 1
print((np.sum(X[:,k,:,:]-a[:,k,:,:])))
print((np.sum(XX[:,k,:,:]-a[:,k,:,:])))

# #--------------------------------------------------------------------------#
# print()
# print(np.mean(X[:,k,:,:]))
# print(X[:,k,:,:].mean())









